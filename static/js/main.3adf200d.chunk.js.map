{"version":3,"sources":["components/Header/Header.js","components/Main/Main.js","components/Traders/Traders.js","components/New/New.js","App.js","reportWebVitals.js","index.js"],"names":["Header","balance","Navbar","bg","variant","expand","Container","fluid","Brand","href","Toggle","Collapse","id","Nav","className","style","maxHeight","navbarScrollx","Link","textDecoration","to","Button","Form","FormControl","type","placeholder","Main","items","userAddress","buyItem","map","item","BigNumber","price","shiftedBy","toString","src","imageUrl","alt","name","diameter","seed","jsNumberForAddress","owner","description","onClick","index","Traders","traders","tradersArr","identicon","rateTrader","useState","allRates","setAllRates","useEffect","forEach","trader","prev","sold","rating","rateCount","outline","min","max","defaultValue","onChange","e","value","handleRateChange","target","rate","handleRate","New","createItem","itemName","setItemName","itemDescription","setItemDescription","itemImage","setItemImage","itemPrice","setItemPrice","navigate","useNavigate","onSubmit","preventDefault","handleSubmit","Group","controlId","Label","Control","as","rows","xchangeContractAddress","App","kit","setKit","setItems","setTraders","setTradersArr","setBalance","setAddress","xchangeContract","setXchangeContract","connectWallet","getBalance","loadItems","getTraders","approvePayment","_amount","cUSDContract","web3","eth","Contract","erc20abi","methods","approve","send","from","defaultAccount","window","celo","enable","Web3","newKitFromWeb3","getAccounts","accounts","console","log","alert","getTotalBalance","cUsdBalance","cUSD","toFixed","xchangeAbi","itemCounter","call","itemsCount","_items","i","Promise","resolve","getItem","_item","push","all","allItems","length","_price","itemIndex","getMarketTraders","getTrader","_trader","_traders","path","element","_address","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3adf200d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n  Container,\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = ({ balance }) => {\r\n  return (\r\n    <div>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n        <Container fluid>\r\n          <Navbar.Brand href=\"#\">XChange</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n          <Navbar.Collapse id=\"navbarScroll\">\r\n            <Nav\r\n              className=\"me-auto my-2 my-lg-0\"\r\n              style={{ maxHeight: \"100px\" }}\r\n              navbarScrollx\r\n            >\r\n              <Nav.Link>\r\n                <Link style={{ textDecoration: \"none\" }} to=\"/\">\r\n                  Home\r\n                </Link>\r\n              </Nav.Link>\r\n              <Nav.Link>\r\n                <Link style={{ textDecoration: \"none\" }} to=\"/new\">\r\n                  New\r\n                </Link>\r\n              </Nav.Link>\r\n              <Nav.Link>\r\n                <Link style={{ textDecoration: \"none\" }} to=\"/traders\">\r\n                  Traders\r\n                </Link>\r\n              </Nav.Link>\r\n            </Nav>\r\n            <Button variant=\"dark\">{balance} cUSD</Button>\r\n            <Form className=\"d-flex\">\r\n              <FormControl\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                className=\"me-2\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <Button variant=\"outline-success\">Search</Button>\r\n            </Form>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport Jazzicon, { jsNumberForAddress } from \"react-jazzicon\";\r\nimport \"./Main.css\";\r\n\r\nconst Main = ({ items, userAddress, buyItem }) => {\r\n  return (\r\n    <div className=\"main\">\r\n      {items?.map((item) => (\r\n        <div className=\"item-card\">\r\n          <div className=\"card-price\">\r\n            ${BigNumber(item.price).shiftedBy(-18).toString()}\r\n          </div>\r\n          <img className=\"card-img\" src={item.imageUrl} alt={item.name} />\r\n          <div className=\"item-details\">\r\n            <Jazzicon diameter={40} seed={jsNumberForAddress(item.owner)} />\r\n            <div className=\"item-details-address\">{item.owner}</div>\r\n          </div>\r\n          <div className=\"card-description\">{item.description}</div>\r\n          {userAddress !== item.owner && (\r\n            <div\r\n              className=\"buy\"\r\n              onClick={() => buyItem(item.index, item.price)}\r\n            >\r\n              Buy\r\n            </div>\r\n          )}\r\n\r\n          <div></div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Traders.css\";\r\n\r\nconst Traders = ({ traders, tradersArr, identicon, rateTrader }) => {\r\n  const [rate, setRate] = useState(5);\r\n  const [allRates, setAllRates] = useState();\r\n\r\n  const loadRates = () => {\r\n    tradersArr.forEach((trader) => {\r\n      setAllRates((prev) => {\r\n        let newObj = { ...prev, [trader]: 5 };\r\n        return newObj;\r\n      });\r\n    });\r\n  };\r\n\r\n  const handleRateChange = (value, trader) => {    \r\n    setAllRates(prev => {\r\n        return {...prev, [trader]: value}\r\n    })\r\n  };\r\n\r\n  const handleRate = (trader) => {\r\n    const rate = allRates[trader];\r\n    // console.log(`${trader} ===> ${rate}`)\r\n    rateTrader(trader, rate)\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadRates();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"trader\">\r\n        <div className=\"trader-title\">Traders</div>\r\n        {traders.map((trader, index) => (\r\n          <div className=\"trader-card\">\r\n            <div className=\"trader-icon\">{identicon(trader.trader)}</div>\r\n            <div className=\"trader-details\">\r\n              <div>Sold: {trader.sold}</div>\r\n              <div>Rating: {trader.rating / trader.rateCount || 0}</div>\r\n            </div>\r\n            <div className=\"trader-rate\">\r\n              <input\r\n                name={`rate-${index}`}\r\n                type=\"number\"\r\n                style={{ outline: \"none\" }}\r\n                min={1}\r\n                max={5}\r\n                defaultValue={5}\r\n                onChange={(e) =>\r\n                  handleRateChange(e.target.value, trader.trader)\r\n                }\r\n              />\r\n              <div className=\"rate-button\" onClick={() => handleRate(trader.trader)}>\r\n                Rate\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Traders;\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from \"react-bootstrap\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport \"./New.css\"\r\n\r\nconst New = ({ createItem }) => {\r\n    const [itemName, setItemName] = useState()\r\n    const [itemDescription, setItemDescription] = useState()\r\n    const [itemImage, setItemImage] = useState()\r\n    const [itemPrice, setItemPrice] = useState()\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        createItem(itemName, itemImage, itemDescription, itemPrice);\r\n    }\r\n\r\n    return (\r\n        <div className='form-new'>\r\n            <div className='form-form'>\r\n                <Form onSubmit={(e) => handleSubmit(e)}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Item Name</Form.Label>\r\n                        <Form.Control type=\"text\" onChange={(e) => setItemName(e.target.value)} />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput2\">\r\n                        <Form.Label>Image URL</Form.Label>\r\n                        <Form.Control type=\"text\" onChange={(e) => setItemImage(e.target.value)} />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea3\">\r\n                        <Form.Label>Item Description</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows={3} onChange={(e) => setItemDescription(e.target.value)} />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput4\">\r\n                        <Form.Label>Price</Form.Label>\r\n                        <Form.Control type=\"number\" onChange={(e) => setItemPrice(e.target.value)} />\r\n                    </Form.Group>\r\n                    <Button variant=\"dark\" type=\"button\" onClick={() => navigate(\"/\")}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"dark\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default New","import { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport { newKitFromWeb3 } from \"@celo/contractkit\";\nimport { HashRouter as Router, Routes, Route } from \"react-router-dom\";\nimport BigNumber from \"bignumber.js\";\nimport Jazzicon, { jsNumberForAddress } from \"react-jazzicon\";\n\nimport xchangeAbi from \"./contracts/xchange.abi.json\";\nimport erc20abi from \"./contracts/erc20.abi.json\";\nimport { Header, Main, Traders, New } from \"./components\";\nimport \"./App.css\";\n\nconst ERC20_DECIMALS = 18;\nconst xchangeContractAddress = \"0xD76504526Cf6D6B7cC91e9F1BbE339DA78F47cc3\";\nconst cUSDContractAddress = \"0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1\";\n\nfunction App() {\n  const [kit, setKit] = useState();\n  const [items, setItems] = useState();\n  const [traders, setTraders] = useState();\n  const [tradersArr, setTradersArr] = useState();\n  const [balance, setBalance] = useState(0);\n  const [userAddress, setAddress] = useState();\n  const [xchangeContract, setXchangeContract] = useState();\n\n  useEffect(() => {\n    connectWallet();\n  }, []);\n\n  useEffect(() => {\n    if (kit && userAddress) {\n      getBalance();\n    }\n  }, [kit, userAddress]);\n\n  useEffect(() => {\n    if (xchangeContract) {\n      loadItems();\n      getTraders();\n    }\n  }, [xchangeContract]);\n\n  const identicon = (_address) => {\n    return <Jazzicon diameter={50} seed={jsNumberForAddress(_address)} />;\n  };\n\n  const approvePayment = async (_amount) => {\n    const cUSDContract = new kit.web3.eth.Contract(\n      erc20abi,\n      cUSDContractAddress\n    );\n    await cUSDContract.methods\n      .approve(xchangeContractAddress, _amount)\n      .send({ from: kit.defaultAccount });\n  };\n\n  // connect wallet to app\n  const connectWallet = async () => {\n    if (window.celo) {\n      // alert(\"⚠️ Please approve this DApp to use it.\");\n      try {\n        await window.celo.enable();\n        const web3 = new Web3(window.celo);\n        let kit = newKitFromWeb3(web3);\n\n        const accounts = await kit.web3.eth.getAccounts();\n        const defaultAccount = accounts[0];\n        kit.defaultAccount = defaultAccount;\n\n        setKit(kit);\n        setAddress(defaultAccount);\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      alert(\n        \"You need to install the celo wallet extension in order to use this app\"\n      );\n    }\n  };\n\n  // get both cUSD balance and RP balance\n  const getBalance = async () => {\n    try {\n      const balance = await kit.getTotalBalance(userAddress);\n      const cUsdBalance = balance.cUSD.shiftedBy(-ERC20_DECIMALS).toFixed(2);\n      const xchangeContract = new kit.web3.eth.Contract(\n        xchangeAbi,\n        xchangeContractAddress\n      );\n\n      setBalance(cUsdBalance);\n      setXchangeContract(xchangeContract);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const loadItems = async () => {\n    try {\n      const itemsCount = await xchangeContract.methods.itemCounter().call();\n      const _items = [];\n      for (let i = 0; i < itemsCount; i++) {\n        let item = await new Promise(async (resolve) => {\n          let _item = await xchangeContract.methods.getItem(i).call();\n          resolve({\n            index: i,\n            owner: _item[0],\n            name: _item[1],\n            imageUrl: _item[2],\n            description: _item[3],\n            price: _item[4],\n            sold: _item[5],\n          });\n        });\n        _items.push(item);\n      }\n      const allItems = await Promise.all(_items);\n      console.log(allItems.length);\n      setItems(allItems);\n    } catch (e) {\n      console.log(\"Error loading items: \" + e);\n    }\n  };\n\n  const createItem = async (name, imageUrl, description, _price) => {\n    try {\n      const price = new BigNumber(_price).shiftedBy(ERC20_DECIMALS).toString();\n      const txn = await xchangeContract.methods\n        .createItem(name, imageUrl, description, price)\n        .send({ from: userAddress });\n    } catch (e) {\n      console.log(\"Error creating item: \" + e);\n    }\n  };\n\n  const buyItem = async (itemIndex, itemPrice) => {\n    console.log(userAddress);\n    try {\n      await approvePayment(itemPrice);\n    } catch (e) {\n      console.log(\"Error while approving payment: \" + e);\n    }\n\n    try {\n      await xchangeContract.methods\n        .buyItem(itemIndex)\n        .send({ from: userAddress });\n    } catch (e) {\n      console.log(\"Error while calling buyItem(): \" + e);\n    }\n  };\n\n  const getTraders = async () => {\n    try {\n      const tradersArr = await xchangeContract.methods\n        .getMarketTraders()\n        .call();\n      setTradersArr(tradersArr);\n      const _traders = await Promise.all(\n        tradersArr.map(async (trader) => {\n          const _trader = await xchangeContract.methods\n            .getTrader(trader)\n            .call();\n          return {\n            trader: _trader.trader,\n            sold: _trader.sold,\n            rating: _trader.rating,\n            rateCount: _trader.rateCount,\n          };\n        })\n      );\n      setTraders(_traders);\n    } catch (e) {\n      console.log(\"Error getting traders: \" + e);\n    }\n  };\n\n  const rateTrader = async (trader, rate) => {\n    try {\n      await xchangeContract.methods\n        .rateTrader(trader, rate)\n        .send({ from: userAddress });\n    } catch (e) {\n      console.log(\"Error while rating traders: \" + e);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header balance={balance} />\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <Main items={items} userAddress={userAddress} buyItem={buyItem} />\n            }\n          />\n          <Route path=\"/new\" element={<New createItem={createItem} />} />\n          <Route\n            path=\"/traders\"\n            element={\n              <Traders\n                traders={traders}\n                identicon={identicon}\n                tradersArr={tradersArr}\n                rateTrader={rateTrader}\n              />\n            }\n          />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}